name: Build, Analyze, and Deploy to Azure App Service

on:
  push:
    branches:
      - 'main'

permissions:
  id-token: write
  contents: read

jobs:
#   sonar:
#     name: SonarQube Analysis
#     runs-on: ubuntu-latest

#     steps:
#       # Vérification et récupération du code source
#       - name: Checkout code
#         uses: actions/checkout@v3

#       # Installation du scanner SonarQube
#       - name: Setup SonarQube Scanner
#         run: |
#           wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
#           unzip sonar-scanner-cli-4.8.0.2856-linux.zip -d $HOME
#           echo "$HOME/sonar-scanner-4.8.0.2856-linux/bin" >> $GITHUB_PATH

#       # Analyse de code avec SonarQube
#       - name: Run SonarQube Analysis
#         env:
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#         run: |
#           sonar-scanner \
#             -Dsonar.projectKey=my_project_key \
#             -Dsonar.host.url=https://your-sonarqube-server \
#             -Dsonar.login=$SONAR_TOKEN

  build-and-deploy:
    name: Build and Deploy to Azure App Service
    # needs: sonar
    # if: success()
    runs-on: ubuntu-latest

    steps:
      # Vérification et récupération du code source
      - name: Checkout code
        uses: actions/checkout@v3

      # Connexion à Azure
      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Connexion à Azure Container Registry
      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: mp2lacr.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # Construction et push de l'image Docker
      - name: Build and Push Docker Image
        run: |
          docker build ./sources -f ./sources/Dockerfile -t mp2lacr.azurecr.io/myapp:${{ github.sha }}
          docker push mp2lacr.azurecr.io/myapp:${{ github.sha }}

      # Déploiement sur Azure App Service
      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: mp2lwebapp
          images: mp2lacr.azurecr.io/myapp:${{ github.sha }}

      # Déconnexion d'Azure
      - name: Azure Logout
        run: |
          az logout
