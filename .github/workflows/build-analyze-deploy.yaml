name: Build, Analyze and Deploy

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: temurin

      - name: Cache SonarCloud dependencies
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar

      - name: Run SonarCloud Analysis
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: ./sources
          args: >
            -Dsonar.projectKey=AhmedJallali_calc-CI-CD
            -Dsonar.organization=ahmedjallali
            -Dsonar.sources=.
            -Dsonar.exclusions=**/node_modules/**,**/dist/**

      - name: Check Quality Gate
        uses: SonarSource/sonarcloud-github-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  docker:
    name: Build and Push Docker Image
    needs: sonarcloud
    runs-on: ubuntu-latest

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v3
        with:
          context: ./sources
          file: ./sources/Dockerfile
          push: true
          tags: ahmedjallali/devopsproject:1.0.${{ github.run_number }}

  build-and-deploy-2:
    name: Build and Deploy to Azure App Service
    needs: docker
    runs-on: ubuntu-latest
    if: success()

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: mp2lacr.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Pull Docker Image from DockerHub and Push to ACR
        run: |
          docker pull ahmedjallali/devopsproject:1.0.${{ github.run_number }}
          docker tag ahmedjallali/devopsproject:1.0.${{ github.run_number }} mp2lacr.azurecr.io/mp2l:${{ github.sha }}
          docker push mp2lacr.azurecr.io/mp2l:${{ github.sha }}

      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: mp2lwebapp2
          images: mp2lacr.azurecr.io/mp2l:${{ github.sha }}

      - name: Azure Logout
        run: |
          az logout
